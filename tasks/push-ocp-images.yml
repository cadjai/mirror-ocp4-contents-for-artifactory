---
- name: Check that oc client is installed with right version
  command: "{{ openshift_client_binary }} version"
  ignore_errors: yes
  register: oc_client_installed

- name: '{{ ansible_name_module }} | assert | ensure client is present'
  assert:
    that:
      - oc_client_installed.rc == 0
      - " not 'command not found' in oc_client_installed.stderr "
    msg: "Ensure the OC client is installed with the version required on controller"

- name: '{{ ansible_name_module }} | yum | install required packages '
  yum:
    name:
      - tar 
      - podman
      #- lzma
      #- python-backports-lzma
      #- xz-devel
    state: present

- name: '{{ ansible_name_module }} | file:directory | Ensure the images staging directory exist'
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ dir_bundle_staging }}"

- name: '{{ ansible_name_module }} | set registry port if required '
  set_fact:
    registry_port: "{{ ':' + reg_port if reg_port is defined and reg_port | int > 0 else '' }}"
    release_repo: "{{ '/' + release_image_repository if release_image_repository and release_image_repository != '' else '' }}"

- name: '{{ ansible_name_module }} | unarchive:xz | bundle '
  unarchive:
    src: "{{ bundle_file_location }}"
    remote_src: yes
    dest: "{{ dir_bundle_staging }}"
    mode: 0755
  when:
    - skip_bundle is undefined or not skip_bundle | bool
  register: unbundle_out

- name: '{{ ansible_name_module }} | command | generate authfile for registry'
  no_log: true
  command: > 
    podman login -u {{ registry_admin_username }} -p {{ registry_admin_password }} \
       --authfile {{ dir_bundle_staging }}/config.json \
       {{ registry_host_fqdn }}{{ registry_port }}
  register: authfile_created

- name: '{{ ansible_name_module }} | set_fact |  authfile for registry'
  set_fact:
    registry_auth_config: "{{ dir_bundle_staging }}/config.json"
  when:
    - authfile_created is defined

- name: '{{ ansible_name_module }} | file | set permission on authfile'
  when:
    - authfile_created is defined
  block:      
    - name: Set file permissions
      file:
        path: "{{ registry_auth_config }}"
        owner: "{{ lookup('env', 'USER') }}" 
        group: "{{ lookup('env', 'USER') }}"
        mode: '0644'

- name: '{{ ansible_name_module }} | command:oc adm | load images to registry '
  command: > 
    oc image mirror \
       -a {{ registry_auth_config }} \
       --from-dir={{ dir_bundle_staging }} \
       file://openshift/release:{{ ocp_release_version }}* \
       {{ registry_host_fqdn }}{{ registry_port }}/{{ local_repository }}{{ release_repository }} --loglevel=8
  when:
    - authfile_created is defined
  register: registry_loaded

 ### Mirror release image into a separate repository
 # This make it easier to deploy the OpenShift Update Service later
- name: '{{ ansible_name_module }} | command:oc adm | load images to registry '
  command: > 
    oc image mirror \
       -a {{ registry_auth_config }} \
       {{ registry_host_fqdn }}{{ registry_port }}/{{ local_repository }}{{ release_repository }}:{{ ocp_release_version }}-{{ ocp_release_arch }} \
       {{ registry_host_fqdn }}{{ registry_port }}/{{ local_repository }}{{ release_image_repository }}:{{ ocp_release_version }}-{{ ocp_release_arch }}
  when:
    - authfile_created is defined
  register: release_image_loaded

- name: '{{ ansible_name_module }} | file:absent | bundles staging directories'
  file:
    state: absent 
    path: "{{ item }}"
  with_items: 
    - "{{ dir_bundle_staging }}"
  when:
    - registry_loaded is defined
    - registry_loaded.changed | bool
    - not registry_loaded.failed | bool
    - skip_bundle is undefined or not skip_bundle | bool
